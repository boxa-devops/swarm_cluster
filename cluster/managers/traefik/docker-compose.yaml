version: '3.7'
services:
  proxy:
    image: ${IMAGE}
    command:
      - "--providers.docker"
      - "--providers.docker.constraints=Label(`traefik.constraint-label`, `${STACK}`)"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.swarmmode"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.le.acme.email=${EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/certificates/acme.json"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--accesslog"
      - "--log"
      - "--api"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - ${PUBLIC_NETWORK}
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=${PUBLIC_NETWORK}
        - traefik.constraint-label=${STACK}
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true

        - traefik.http.routers.${STACK}-http.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.${STACK}-http.entrypoints=http
        - traefik.http.routers.${STACK}-http.middlewares=https-redirect

        - traefik.http.routers.${STACK}-https.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.${STACK}-https.entrypoints=https
        - traefik.http.routers.${STACK}-https.tls=true

        - traefik.http.routers.${STACK}-https.service=api@internal
        - traefik.http.routers.${STACK}-https.tls.certresolver=le
        - traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=8080
      placement:
        constraints:
          - node.role == ${ROLE}
          - node.labels.${STACK}.traefik-proxy-certificates == true
      mode: global
volumes:
  traefik-proxy-certificates:

networks:
  ${PUBLIC_NETWORK}:
    external: true